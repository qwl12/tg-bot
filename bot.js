const { Bot, InlineKeyboard } = require('grammy');
const { rpsKeyboard } = require('./keyboards/RPSKeyboard');
const bot = new Bot('7744251076:AAEvkaRlygAhQFE2IYTL4mkCwGfmLLte9TE');
const { RPSplay } = require('./src/RPSgame');
const { flipcoin } = require('./src/flipcoin');
const { handleHelpCommand } = require("./src/help");
const {startGuessGame, handleGuess} = require('./src/findNum');



//—Å—Ç–∞—Ä—Ç
bot.command('start',(ctx) => {
    const keyboard = new InlineKeyboard()
    .text('–û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞', 'flipcoin')
    .text('–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü–∞, –±—É–º–∞–≥–∞', 'RPS')
    .text('–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ', 'guess')
    .row()
    .text('–ü–æ–º–æ—â—å','help');

    
    ctx.reply('–ü—Ä–∏–≤–µ—Ç —è —Å–∞–Ω—è —à–ª—è–ø–∏–∫, –µ—Å–ª–∏ —Ç—ã –µ—â–µ —Ç—É—Ç, —Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –≤–æ —á—Ç–æ —è —É–º–µ—é –∏–≥—Ä–∞—Ç—å:', {reply_markup: keyboard});
});

// –û–†–ï–õ –ò–õ–ò –†–ï–®–ö–ê
bot.command('flipcoin', (ctx) =>{
   const keyboard = new InlineKeyboard().text('–†–µ—à–∫–∞', 'reshka').text('–û—Ä–µ–ª', 'orel');
   ctx.reply('–í—ã–±–µ—Ä–∏ –æ—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞', {reply_markup: keyboard});
})

// –ö–ê–ú–ï–ù–¨ –ù–û–ñ–ù–ò–¶–´ –ë–£–ú–ê–ì–ê
bot.command("rps", async (ctx) => {
    await ctx.reply("–ò–≥—Ä–∞–µ–º –≤ '–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞'! –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ö–æ–¥:", {
      reply_markup: rpsKeyboard,
    });
});

// –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ
bot.command("guess", (ctx) => {
    startGuessGame(ctx);
  });

//btn`s
bot.callbackQuery("guess", (ctx) => {
  ctx.answerCallbackQuery(); 
  ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'. –í–≤–µ–¥–∏—Ç–µ /guess, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!");
});
bot.callbackQuery("flipcoin", (ctx) => {
  ctx.answerCallbackQuery(); 
  ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É '–û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞'. –í–≤–µ–¥–∏—Ç–µ /flipcoin, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!");
});
bot.callbackQuery("RPS", (ctx) => {
    ctx.answerCallbackQuery(); 
    ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É '–ö–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞'. –í–≤–µ–¥–∏—Ç–µ /RPS, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!");
  });
  bot.callbackQuery("help", (ctx) => {

    ctx.reply(`–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:
  
  üéÆ **–ò–≥—Ä—ã**:
  - /guess ‚Äî –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
  - /rps ‚Äî –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞
  - /coin ‚Äî –û—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞
  
  üõ† **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ**:
  - /start ‚Äî –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º
  - /help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
  
  –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É! üéâ
    `)
  });


//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∏–≥—Ä
bot.on("callback_query:data", async (ctx) => {
    const data = ctx.callbackQuery.data;

    if (["rock", "scissors", "paper"].includes(data)) {
      const resultMessage = RPSplay(data);
      await ctx.reply(resultMessage);
    }
    if (["orel","reshka"].includes(data)) {
        const resultMessage = flipcoin(data);
        await ctx.reply(resultMessage);
    }

});


bot.command("help", (ctx) => {
    handleHelpCommand(ctx);
  });

bot.on("message", (ctx) => {
    handleGuess(ctx);
  });


//–ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
bot.command('echo',(ctx) => {
    const message = ctx.message.text.split(' ').slice(1).join(' ');
    ctx.reply(message || '–≤–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–∏–≤–∞');
});

//—à—É—Ç–∫–∞
bot.command('jonkler', async (ctx) => {
    const jokes = [
        '–ö—É–ø–∞—é—Ç—Å—è –∫–∞–∫-—Ç–æ –¥–≤–∞ —Ç–∏–º—ã –≤ –±–∞—Å—Å–µ–π–Ω–µ',
        '–¢–∏–º–∞ —É–º–Ω—ã–π',
        '–í–æ–π—Ç–∏ –≤ –∞–π—Ç–∏ (–∞—Ö–≤—Ö–∞—ã–≤—Ö–∞—ã—Ö–≤–∞—Ö —Ä–∞–∑—Ä—ã–≤–Ω–∞—è)',
    ];

    const randomjoke = jokes[Math.floor(Math.random() * jokes.length)];
    await ctx.reply(randomjoke);
});

bot.start();
console.log('—Å—Ç–∞—Ä—Ç—É–µ–º');